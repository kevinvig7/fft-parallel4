@article{proakis_digital_nodate,
	title = {{DIGITAL} {SIGNAL} {PROCESSING}},
	pages = {1033},
	author = {Proakis, John G and Manolakis, Dimitris G},
	langid = {english}
}


@inbook{folding_parhi_book, 
	title = "{VLSI} {D}igital {S}ignal {P}rocessing {S}ystems. {D}esign and implementation",
	pages = {151-163},
	year      = "1999",
	author    = "Keshab K. Parhi",
	publisher = "{JOHN WILEY \& SONS, INC}.",
	chapter  =  {Folding Transformation},
}



@book{oppenheim_tratamiento_2011,
	location = {Madrid},
	title = {Tratamiento de señales en tiempo discreto, tercera edición},
	isbn = {978-84-8322-718-3},
	publisher = {Pearson Educación},
	author = {Oppenheim, Alan V and Schafer, Ronald W},
	date = {2011},
	langid = {spanish},
	note = {{OCLC}: 843859190}
}

@article{garrido_feedforward_2018,
	title = {Feedforward {FFT} Hardware Architectures Based on Rotator Allocation},
	volume = {65},
	issn = {1549-8328, 1558-0806},
	doi = {10.1109/TCSI.2017.2722690},
	abstract = {In this paper we present new feedforward {FFT} hardware architectures based on rotator allocation. The rotator allocation approach consists in distributing the rotations of the {FFT} in such a way that the number of edges in the {FFT} that need rotators and the complexity of the rotators are reduced. Radix-2 and radix-2k feedforward architectures based on rotator allocation are presented in this paper. Experimental results show that the proposed architectures reduce the hardware cost signiﬁcantly with respect to previous {FFT} architectures.},
	pages = {581--592},
	number = {2},
	journaltitle = {{IEEE} Transactions on Circuits and Systems I: Regular Papers},
	shortjournal = {{IEEE} Trans. Circuits Syst. I},
	author = {Garrido, Mario and Huang, Shen-Jui and Chen, Sau-Gee},
	urldate = {2020-01-30},
	date = {2018-02},
	langid = {english}
}
@article{garrido_pipelined_2013,
	title = {Pipelined {Radix}-\$2{\textasciicircum}\{k\}\$ {Feedforward} {FFT} {Architectures}},
	volume = {21},
	issn = {1063-8210, 1557-9999},
	doi = {10.1109/TVLSI.2011.2178275},
	abstract = {The appearance of radix-22 was a milestone in the design of pipelined FFT hardware architectures. Later, radix-22 was extended to radix-2k. However, radix-2k was only proposed for Single-path Delay Feedback (SDF) architectures, but not for feedforward ones, also called Multi-path Delay Commutator (MDC).},
	language = {en},
	number = {1},
	urldate = {2019-10-11},
	journal = {IEEE Transactions on Very Large Scale Integration (VLSI) Systems},
	author = {Garrido, Mario and Grajal, J. and Sanchez, M. A. and Gustafsson, Oscar},
	month = jan,
	year = {2013},
	pages = {23--32}
}

@article{type_FFT_MIT,
	title = {{F}ast {F}ourier {T}ransform:{VLSI} {A}rchitectures},
	journal = {6.973 Communication System Design – Spring 2006 Massachusetts Institute of Technology},
	author = {Vladimir Stojanovic},
	year = {2006},
	pages = {3--4}
}

@article{ayinala_pipelined_2012,
	title = {Pipelined {Parallel} {FFT} {Architectures} via {Folding} {Transformation}},
	volume = {20},
	issn = {1063-8210, 1557-9999},
	doi = {10.1109/TVLSI.2011.2147338},
	abstract = {This paper presents a novel approach to develop parallel pipelined architectures for the fast Fourier transform (FFT). A formal procedure for designing FFT architectures using folding transformation and register minimization techniques is proposed. Novel parallel-pipelined architectures for the computation of complex and real valued fast Fourier transform are derived. For complex valued Fourier transform (CFFT), the proposed architecture takes advantage of under utilized hardware in the serial architecture to derive -parallel architectures without increasing the hardware complexity by a factor of . The operating frequency of the proposed architecture can be decreased which in turn reduces the power consumption. Further, this paper presents new parallel-pipelined architectures for the computation of real-valued fast Fourier transform (RFFT). The proposed architectures exploit redundancy in the computation of FFT samples to reduce the hardware complexity. A comparison is drawn between the proposed designs and the previous architectures. The power consumption can be reduced up to 37\% and 50\% in 2-parallel CFFT and RFFT architectures, respectively. The output samples are obtained in a scrambled order in the proposed architectures. Circuits to reorder these scrambled output sequences to a desired order are presented.},
	language = {en},
	number = {6},
	urldate = {2019-10-11},
	journal = {IEEE Transactions on Very Large Scale Integration (VLSI) Systems},
	author = {Ayinala, Manohar and Brown, Michael and Parhi, Keshab K.},
	month = jun,
	year = {2012},
	pages = {1068--1081}
}

@inproceedings{garrido_efficient_2007,
location = {Honolulu, {HI}, {USA}},
title = {Efficient Memoryless Cordic for {FFT} Computation},
isbn = {978-1-4244-0727-9},
doi = {10.1109/ICASSP.2007.366185},
abstract = {A new memoryless {CORDIC} algorithm for the {FFT} computation is proposed in this paper. This approach calculates the direction of the micro-rotations from the control counter of the {FFT}, so the area of the rotator hardly depends on the number of rotations, which is particularly suitable for the computation of {FFTs} of a high number of points. Moreover, the new {CORDIC} presents other advantages such as the simpliﬁcation of the basic {CORDIC} processor used to calculate the micro-rotations, or an easy way to compensate the intrinsic gain of the {CORDIC} algorithm. Additionally, the {VLSI} implementation of the algorithm is a pipeline architecture with high performance in terms of speed, throughput and latency.},
eventtitle = {2007 {IEEE} International Conference on Acoustics, Speech and Signal Processing - {ICASSP} '07},
pages = {II--113--II--116},
booktitle = {2007 {IEEE} International Conference on Acoustics, Speech and Signal Processing - {ICASSP} '07},
publisher = {{IEEE}},
author = {Garrido, M. and Grajal, J.},
urldate = {2020-01-30},
date = {2007},
langid = {english}
}


@article{jia_efficient_nodate,
	title = {Efficient {VLSI} Implementation of Radix-8 {FFT} Algorithm},
	abstract = {High-radix Cooley-Turkey {FFT} algorithms have obvious advantages: less multiplications and reduced memory accesses so power consumption can be reduced. However, the disadvantages are that traditional direct mapping implementation of high-radix butterfly element will required more complex multipliers and thus large silicon area will be consumed. In this paper, we proposed an eficient approach to realize the high radix butterflyprocess element. This approach employed pipelining technics to cascade the paralleled multipliers and thusfewer complex multipliers are utilized to realize the radix-r butterfy element. This approach can achieve a good trade-off between speed and area in the design of high radix butterfly element.},
	pages = {4},
	author = {Jia, Lihong and Gao, Yonghong and Tenhunen, Hannu},
	langid = {english}
}

@inproceedings{shousheng_he_designing_1998,
	location = {Pisa, Italy},
	title = {Designing pipeline {FFT} processor for {OFDM} (de)modulation},
	isbn = {978-0-7803-4900-1},
	doi = {10.1109/ISSSE.1998.738077},
	abstract = {{FFT} processor is one of the key comipo- delay spread. The narrow bandwidth of sub-channels has nents in the implementation of wideband {OFDM} sys- also made sophisticated channel equalization unnecessary. tems. Architectures with structured Pipeline have been {OFDM} systems have been ,proposed for audio signal transused to meet the fast, real-time processing demand and mission to mobile receivers [4, 51, data intensive {HDTV} low-power consumption requirement in a mobile envi- broadcasting programs [6] and cellular mobile communicaronment. Architectures based on new forms of {FFT}, ithe tions [7].},
	eventtitle = {1998 {URSI} International Symposium on Signal, Systems, and Electronics. Conference Proceedings},
	pages = {257--262},
	booktitle = {1998 {URSI} International Symposium on Signals, Systems, and Electronics. Conference Proceedings (Cat. No.98EX167)},
	publisher = {{IEEE}},
	author = {{Shousheng He} and Torkelson, M.},
	urldate = {2020-01-30},
	date = {1998},
	langid = {english}
}

@inproceedings{fan_low_2006,
	location = {Singapore},
	title = {A Low Multiplier and Multiplication Costs 256-point {FFT} Implementation with Simplified Radix-24 {SDF} Architecture},
	isbn = {978-1-4244-0386-8 978-1-4244-0387-5},
	doi = {10.1109/APCCAS.2006.342239},
	abstract = {In this paper, we propose a low multiplier and multiplication complexities 256-point fast Fourier transform ({FFT}) architecture, especially for {WiMAX} 802.16a systems. Based on the radix-16 {FFT} algorithm, the proposed {FFT} architecture utilizes cascaded simplified radix-24 single-path delay feedback ({SDF}) structures. The control circuit of the proposed simplified radix-24 {SDF} {FFT} architecture is simple. The hardware requirement of the proposed {FFT} architecture only needs 1 complex multiplier and 56 complex adders for supporting 256-point computations. The computation complexity of multiplications and the hardware complexity of the proposed {FFT} architecture need less complexity than both complexities of the previous {FFT} structures in 256-point {FFT} applications. In hardware verifications, the output throughput rate of our {FFT} design processes up to 35.5M samples/sec with Xilinx Virtex2 1500 {FPGA}, and it processes up to 51.5M samples/sec with {UIMC} 0.18gm standard cell technology. The throughput rate of this implementation is suitable for {WiMLAX} 802.16a application, whose maximum sample rate is 32MHz.},
	eventtitle = {{APCCAS} 2006. 2006 {IEEE} Asia Pacific Conference on Circuits and Systems},
	pages = {1935--1938},
	booktitle = {{APCCAS} 2006 - 2006 {IEEE} Asia Pacific Conference on Circuits and Systems},
	publisher = {{IEEE}},
	author = {Fan, Chih-Peng and Lee, Mau-Shih and Su, Guo-An},
	urldate = {2020-01-30},
	date = {2006-12},
	langid = {english}
}

@article{parhi_synthesis_1992,
	title = {Synthesis of control circuits in folded pipelined {DSP} architectures},
	volume = {27},
	issn = {00189200},
	doi = {10.1109/4.109555},
	abstract = {This paper presents a systematicfolding transformation technique to fold any arbitrary signal processing algorithm data-flow graph to a hardware data-flow architecture, for a specified folding set and specified technology constraints. The folding set specifies the processor in which and the time partition at which the task is executed. The folding set is typically obtained by performing scheduling and resource allocation for the algorithm data-flow graph and the specified iteration period. The technology constraints imposed on the hardware architecture (i.e., the level of pipelining and the implementation style of each processor) are also assumed to be known. The folding technique is used to derive the control circuitry of the hardware architecture (including registers, switches, and interconnections). We derive conditions for the validity of a specified folding set, and present approaches to generate the dedicated architecture using systematic folding of tasks to operators. We propose automatic retiming and pipelining of algorithms described by data-flow graphsforfolding. The folding algorithm is applied after preprocessing the data-flow graph (DFG) for automated pipelining and retiming. Our folding algorithm can accommodate single or multiple implementation styles and single or multiple computation clocks, and applies to folding of regular and irregular data-flow graphs.},
	language = {en},
	number = {1},
	urldate = {2019-10-11},
	journal = {IEEE Journal of Solid-State Circuits},
	author = {Parhi, K.K. and Wang, C.-Y. and Brown, A.P.},
	month = jan,
	year = {1992},
	pages = {29--43}
}

@inproceedings{freePdk,
	address = {Lake Louise, AB, Canada},
	title = {{WIP}. {Open}-source standard cell characterization process flow on 45 nm ({FreePDK45}), 0.18 µm, 0.25 µm, 0.35 µm and 0.5 µm},
	isbn = {978-1-5090-6431-1},
	doi = {10.1109/MSE.2017.7945072},
	abstract = {This paper describes the design ﬂow of the standard cell characterization on ﬁve different technologies and integration of its results with other VLSI tools processes that can be duplicated and implemented for the research and education in the academia. In this proposed work, one design ﬂow is on nonfabricable technology of open-source false-technology FreePDK45 of 45 nm CMOS technology [1]. The other design ﬂows are in the fabricable technology in 0.18 µm, 0.25 µm, 0.35 µm and 0.5 µm. The design ﬂow are automated to simplify the students with intricacy of the tools. This design ﬂows in this work are automated for the tool, Virtuoso Liberate from Cadence Design Systems and students can easily adopt it as part of the VLSI design class curriculum. This characterization ﬂow precisely models the electrical characteristics of the cell that has been subjected to different input variables as explained below. The characterized models are of high demand in other design tools used in between RTL to GDSII process ﬂow.},
	language = {en},
	urldate = {2020-08-12},
	booktitle = {2017 {IEEE} {International} {Conference} on {Microelectronic} {Systems} {Education} ({MSE})},
	publisher = {IEEE},
	author = {Thapa, Rabin and Ataei, Samira and Stine, James E.},
	month = may,
	year = {2017},
	pages = {5--6}
}
